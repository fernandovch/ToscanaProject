// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using ToscanaWebApp.Models;

namespace ToscanaWebApp.Migrations
{
    [DbContext(typeof(ToscanaBDContext))]
    [Migration("20180312002934_cambiodecimal3")]
    partial class cambiodecimal3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToscanaWebApp.Models.Categoriaproducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnName("CATEGORIA")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CATEGORIAPRODUCTO");
                });

            modelBuilder.Entity("ToscanaWebApp.Models.Inventariohistorico", b =>
                {
                    b.Property<int>("Indice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("INDICE");

                    b.Property<int>("Cantidadactual")
                        .HasColumnName("CANTIDADACTUAL");

                    b.Property<int>("Cantidadprevia")
                        .HasColumnName("CANTIDADPREVIA");

                    b.Property<DateTime?>("Creacion")
                        .HasColumnName("CREACION")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Modificacion")
                        .HasColumnName("MODIFICACION")
                        .HasColumnType("date");

                    b.Property<int>("Productoid")
                        .HasColumnName("PRODUCTOID");

                    b.Property<string>("Usuariocreador")
                        .HasColumnName("USUARIOCREADOR")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Usuariomodificador")
                        .HasColumnName("USUARIOMODIFICADOR")
                        .HasColumnType("nchar(10)");

                    b.HasKey("Indice");

                    b.HasIndex("Productoid");

                    b.ToTable("INVENTARIOHISTORICO");
                });

            modelBuilder.Entity("ToscanaWebApp.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<int>("Cantidadid")
                        .HasColumnName("CANTIDADID");

                    b.Property<int>("Categoriaid")
                        .HasColumnName("CATEGORIAID");

                    b.Property<decimal>("Costo")
                        .HasColumnName("COSTO")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime?>("Creacion")
                        .HasColumnName("CREACION")
                        .HasColumnType("date");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("DESCRIPCION")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<decimal>("Impuestovarios")
                        .HasColumnName("IMPUESTOVARIOS")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("Impuestoventas")
                        .HasColumnName("IMPUESTOVENTAS")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime?>("Modificacion")
                        .HasColumnName("MODIFICACION")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Precio")
                        .HasColumnName("PRECIO")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Usuariocreador")
                        .HasColumnName("USUARIOCREADOR")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("Usuariomodificador")
                        .HasColumnName("USUARIOMODIFICADOR")
                        .HasColumnType("nchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Cantidadid");

                    b.HasIndex("Categoriaid");

                    b.ToTable("PRODUCTO");
                });

            modelBuilder.Entity("ToscanaWebApp.Models.Tipounidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("DESCRIPCION")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Unidadmetrica")
                        .IsRequired()
                        .HasColumnName("UNIDADMETRICA")
                        .HasColumnType("nchar(10)");

                    b.HasKey("Id");

                    b.ToTable("TIPOUNIDAD");
                });

            modelBuilder.Entity("ToscanaWebApp.Models.Inventariohistorico", b =>
                {
                    b.HasOne("ToscanaWebApp.Models.Producto", "Producto")
                        .WithMany("Inventariohistorico")
                        .HasForeignKey("Productoid")
                        .HasConstraintName("FK_INVENTARIOHISTORICO_PRODUCTO");
                });

            modelBuilder.Entity("ToscanaWebApp.Models.Producto", b =>
                {
                    b.HasOne("ToscanaWebApp.Models.Tipounidad", "CantidadNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("Cantidadid")
                        .HasConstraintName("FK_PRODUCTO_TIPOUNIDAD");

                    b.HasOne("ToscanaWebApp.Models.Categoriaproducto", "Categoria")
                        .WithMany("Producto")
                        .HasForeignKey("Categoriaid")
                        .HasConstraintName("FK_PRODUCTO_CATEGORIAPRODUCTO");
                });
#pragma warning restore 612, 618
        }
    }
}
